{"ast":null,"code":"import credentials from \"./credentials\";\nlet id = '4aa2e2d16efe46e198d444f232e96695'; // client id\n\nlet sec = '42147b97f5254fc1b06949d1cc3f0694'; // secret\n\nconst redirect_uri = 'http://localhost:3000'; // feel free to edit\n\nlet access_token = null;\nlet refresh_token = null;\nlet currentPlaylist = \"\";\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\";\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\nexport const onPageLoad = () => {\n  const spt = credentials(); // query backend for id and secret\n\n  id = spt.ClientId;\n  sec = spt.ClientSecret; // is this how you have a localstorage item\n\n  if (!localStorage.getItem('spotify-token')) {\n    // display login alert\n    return false;\n  }\n\n  refreshAccessToken();\n  access_token = localStorage.getItem(\"access_token\");\n};\nexport const handleRedirect = () => {\n  let code = getCode();\n  fetchAccessToken(code);\n  window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n};\nexport const getCode = () => {\n  let code = null;\n  const queryString = window.location.search;\n\n  if (queryString.length > 0) {\n    const urlParams = new URLSearchParams(queryString);\n    code = urlParams.get('code');\n  }\n\n  return code;\n};\nexport const requestAuthorization = () => {\n  // TODO: get id's from backend\n  let url = AUTHORIZE;\n  url += \"?client_id=\" + id;\n  url += \"&response_type=code\";\n  url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  url += \"&show_dialog=true\";\n  url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n  window.location.href = url; // Show Spotify's authorization screen\n};\nexport const fetchAccessToken = code => {\n  let body = \"grant_type=authorization_code\";\n  body += \"&code=\" + code;\n  body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  body += \"&id=\" + id;\n  body += \"&sec=\" + sec;\n  callAuthorizationApi(body);\n};\nexport const refreshAccessToken = () => {\n  refresh_token = localStorage.getItem(\"refresh_token\");\n  let body = \"grant_type=refresh_token\";\n  body += \"&refresh_token=\" + refresh_token;\n  body += \"&id=\" + id;\n  callAuthorizationApi(body);\n};\nexport const callAuthorizationApi = body => {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", TOKEN, true);\n  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  xhr.setRequestHeader('Authorization', 'Basic ' + btoa(id + \":\" + sec));\n  xhr.send(body);\n  xhr.onload = handleAuthorizationResponse;\n};\nexport const handleAuthorizationResponse = () => {\n  if (this.status === 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n\n    if (data.access_token !== undefined) {\n      access_token = data.access_token;\n      localStorage.setItem(\"access_token\", access_token);\n    }\n\n    if (data.refresh_token !== undefined) {\n      refresh_token = data.refresh_token;\n      localStorage.setItem(\"refresh_token\", refresh_token);\n    }\n\n    onPageLoad();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const refreshDevices = () => {\n  callApi(\"GET\", DEVICES, null, handleDevicesResponse);\n};\nexport const handleDevicesResponse = () => {\n  if (this.status === 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"devices\");\n    data.devices.forEach(item => addDevice(item));\n  } else if (this.status === 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addDevice = item => {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name;\n  document.getElementById(\"devices\").appendChild(node);\n};\nexport const callApi = (method, url, body, callback) => {\n  let xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n  xhr.send(body);\n  xhr.onload = callback;\n};\nexport const refreshPlaylists = () => {\n  callApi(\"GET\", PLAYLISTS, null, handlePlaylistsResponse);\n};\nexport const handlePlaylistsResponse = () => {\n  if (this.status === 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"playlists\");\n    data.items.forEach(item => addPlaylist(item));\n    document.getElementById('playlists').value = currentPlaylist;\n  } else if (this.status === 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addPlaylist = item => {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n  document.getElementById(\"playlists\").appendChild(node);\n};\nexport const removeAllItems = elementId => {\n  let node = document.getElementById(elementId);\n\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n};\nexport const play = () => {\n  let playlist_id = document.getElementById(\"playlists\").value;\n  let trackindex = document.getElementById(\"tracks\").value;\n  let album = document.getElementById(\"album\").value;\n  let body = {};\n\n  if (album.length > 0) {\n    body.context_uri = album;\n  } else {\n    body.context_uri = \"spotify:playlist:\" + playlist_id;\n  }\n\n  body.offset = {};\n  body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n  body.offset.position_ms = 0;\n  callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse);\n};\nexport const shuffle = () => {\n  callApi(\"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse);\n  play();\n};\nexport const pause = () => {\n  callApi(\"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const next = () => {\n  callApi(\"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const previous = () => {\n  callApi(\"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const transfer = () => {\n  let body = {};\n  body.device_ids = [];\n  body.device_ids.push(deviceId());\n  callApi(\"PUT\", PLAYER, JSON.stringify(body), handleApiResponse);\n};\nexport const handleApiResponse = () => {\n  if (this.status === 200) {\n    console.log(this.responseText);\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status === 204) {\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status === 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const deviceId = () => {\n  return document.getElementById(\"devices\").value;\n};\nexport const fetchTracks = () => {\n  let playlist_id = document.getElementById(\"playlists\").value;\n\n  if (playlist_id.length > 0) {\n    const url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n    callApi(\"GET\", url, null, handleTracksResponse);\n  }\n};\nexport const handleTracksResponse = () => {\n  if (this.status === 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"tracks\");\n    data.items.forEach((item, index) => addTrack(item, index));\n  } else if (this.status === 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addTrack = (item, index) => {\n  let node = document.createElement(\"option\");\n  node.value = index;\n  node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n  document.getElementById(\"tracks\").appendChild(node);\n};\nexport const currentlyPlaying = () => {\n  callApi(\"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse);\n};\nexport const handleCurrentlyPlayingResponse = () => {\n  if (this.status === 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n\n    if (data.item !== null) {\n      document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n      document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n      document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n    }\n\n    if (data.device !== null) {\n      // select device\n      const currentDevice = data.device.id;\n      document.getElementById('devices').value = currentDevice;\n    }\n\n    if (data.context !== null) {\n      // select playlist\n      currentPlaylist = data.context.uri;\n      currentPlaylist = currentPlaylist.substring(currentPlaylist.lastIndexOf(\":\") + 1, currentPlaylist.length);\n      document.getElementById('playlists').value = currentPlaylist;\n    }\n  } else if (this.status === 204) {} else if (this.status === 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};","map":{"version":3,"sources":["/Users/johnboesen/Documents/Code/Spotify-Weather-Frontend/src/api-functions.js"],"names":["credentials","id","sec","redirect_uri","access_token","refresh_token","currentPlaylist","AUTHORIZE","TOKEN","PLAYLISTS","DEVICES","PLAY","PAUSE","NEXT","PREVIOUS","PLAYER","TRACKS","CURRENTLYPLAYING","SHUFFLE","onPageLoad","spt","ClientId","ClientSecret","localStorage","getItem","refreshAccessToken","handleRedirect","code","getCode","fetchAccessToken","window","history","pushState","queryString","location","search","length","urlParams","URLSearchParams","get","requestAuthorization","url","encodeURI","href","body","callAuthorizationApi","xhr","XMLHttpRequest","open","setRequestHeader","btoa","send","onload","handleAuthorizationResponse","status","data","JSON","parse","responseText","console","log","undefined","setItem","alert","refreshDevices","callApi","handleDevicesResponse","removeAllItems","devices","forEach","item","addDevice","node","document","createElement","value","innerHTML","name","getElementById","appendChild","method","callback","refreshPlaylists","handlePlaylistsResponse","items","addPlaylist","tracks","total","elementId","firstChild","removeChild","play","playlist_id","trackindex","album","context_uri","offset","position","Number","position_ms","deviceId","stringify","handleApiResponse","shuffle","pause","next","previous","transfer","device_ids","push","setTimeout","currentlyPlaying","fetchTracks","replace","handleTracksResponse","index","addTrack","track","artists","handleCurrentlyPlayingResponse","src","images","device","currentDevice","context","uri","substring","lastIndexOf"],"mappings":"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","sourcesContent":["import credentials from \"./credentials\";\n\nlet id = '4aa2e2d16efe46e198d444f232e96695'; // client id\nlet sec = '42147b97f5254fc1b06949d1cc3f0694'; // secret\nconst redirect_uri = 'http://localhost:3000'; // feel free to edit\n\nlet access_token = null;\nlet refresh_token = null;\nlet currentPlaylist = \"\";\n\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\"\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\n\nexport const onPageLoad = () => {\n    const spt = credentials();\n    // query backend for id and secret\n    id = spt.ClientId;\n    sec = spt.ClientSecret;\n    // is this how you have a localstorage item\n    if (!localStorage.getItem('spotify-token')) {\n        // display login alert\n        return false;\n    }\n    refreshAccessToken();\n    access_token = localStorage.getItem(\"access_token\");\n\n}\n\nexport const handleRedirect = () => {\n    let code = getCode();\n    fetchAccessToken(code);\n    window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n}\n\nexport const getCode = () => {\n    let code = null;\n    const queryString = window.location.search;\n    if (queryString.length > 0) {\n        const urlParams = new URLSearchParams(queryString);\n        code = urlParams.get('code')\n    }\n    return code;\n}\n\nexport const requestAuthorization = () => {\n    // TODO: get id's from backend\n    let url = AUTHORIZE;\n    url += \"?client_id=\" + id;\n    url += \"&response_type=code\";\n    url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    url += \"&show_dialog=true\";\n    url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n    window.location.href = url; // Show Spotify's authorization screen\n}\n\nexport const fetchAccessToken = (code) => {\n    let body = \"grant_type=authorization_code\";\n    body += \"&code=\" + code;\n    body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    body += \"&id=\" + id;\n    body += \"&sec=\" + sec;\n    callAuthorizationApi(body);\n}\n\nexport const refreshAccessToken = () => {\n    refresh_token = localStorage.getItem(\"refresh_token\");\n    let body = \"grant_type=refresh_token\";\n    body += \"&refresh_token=\" + refresh_token;\n    body += \"&id=\" + id;\n    callAuthorizationApi(body);\n}\n\nexport const callAuthorizationApi = (body) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(id + \":\" + sec));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n}\n\nexport const handleAuthorizationResponse = () => {\n    if (this.status === 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        if (data.access_token !== undefined) {\n            access_token = data.access_token;\n            localStorage.setItem(\"access_token\", access_token);\n        }\n        if (data.refresh_token !== undefined) {\n            refresh_token = data.refresh_token;\n            localStorage.setItem(\"refresh_token\", refresh_token);\n        }\n        onPageLoad();\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const refreshDevices = () => {\n    callApi(\"GET\", DEVICES, null, handleDevicesResponse);\n}\n\nexport const handleDevicesResponse = () => {\n    if (this.status === 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"devices\");\n        data.devices.forEach(item => addDevice(item));\n    }\n    else if (this.status === 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addDevice = (item) => {\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name;\n    document.getElementById(\"devices\").appendChild(node);\n}\n\nexport const callApi = (method, url, body, callback) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n    xhr.send(body);\n    xhr.onload = callback;\n}\n\nexport const refreshPlaylists = () => {\n    callApi(\"GET\", PLAYLISTS, null, handlePlaylistsResponse);\n}\n\nexport const handlePlaylistsResponse = () => {\n    if (this.status === 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"playlists\");\n        data.items.forEach(item => addPlaylist(item));\n        document.getElementById('playlists').value = currentPlaylist;\n    }\n    else if (this.status === 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addPlaylist = (item) => {\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n    document.getElementById(\"playlists\").appendChild(node);\n}\n\nexport const removeAllItems = (elementId) => {\n    let node = document.getElementById(elementId);\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n}\n\nexport const play = () => {\n    let playlist_id = document.getElementById(\"playlists\").value;\n    let trackindex = document.getElementById(\"tracks\").value;\n    let album = document.getElementById(\"album\").value;\n    let body = {};\n    if (album.length > 0) {\n        body.context_uri = album;\n    }\n    else {\n        body.context_uri = \"spotify:playlist:\" + playlist_id;\n    }\n    body.offset = {};\n    body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n    body.offset.position_ms = 0;\n    callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse);\n}\n\nexport const shuffle = () => {\n    callApi(\"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse);\n    play();\n}\n\nexport const pause = () => {\n    callApi(\"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const next = () => {\n    callApi(\"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const previous = () => {\n    callApi(\"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const transfer = () => {\n    let body = {};\n    body.device_ids = [];\n    body.device_ids.push(deviceId())\n    callApi(\"PUT\", PLAYER, JSON.stringify(body), handleApiResponse);\n}\n\nexport const handleApiResponse = () => {\n    if (this.status === 200) {\n        console.log(this.responseText);\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if (this.status === 204) {\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if (this.status === 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const deviceId = () => {\n    return document.getElementById(\"devices\").value;\n}\n\nexport const fetchTracks = () => {\n    let playlist_id = document.getElementById(\"playlists\").value;\n    if (playlist_id.length > 0) {\n        const url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n        callApi(\"GET\", url, null, handleTracksResponse);\n    }\n}\n\nexport const handleTracksResponse = () => {\n    if (this.status === 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"tracks\");\n        data.items.forEach((item, index) => addTrack(item, index));\n    }\n    else if (this.status === 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addTrack = (item, index) => {\n    let node = document.createElement(\"option\");\n    node.value = index;\n    node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n    document.getElementById(\"tracks\").appendChild(node);\n}\n\nexport const currentlyPlaying = () => {\n    callApi(\"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse);\n}\n\nexport const handleCurrentlyPlayingResponse = () => {\n    if (this.status === 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        if (data.item !== null) {\n            document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n            document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n            document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n        }\n\n\n        if (data.device !== null) {\n            // select device\n            const currentDevice = data.device.id;\n            document.getElementById('devices').value = currentDevice;\n        }\n\n        if (data.context !== null) {\n            // select playlist\n            currentPlaylist = data.context.uri;\n            currentPlaylist = currentPlaylist.substring(currentPlaylist.lastIndexOf(\":\") + 1, currentPlaylist.length);\n            document.getElementById('playlists').value = currentPlaylist;\n        }\n    }\n    else if (this.status === 204) {\n\n    }\n    else if (this.status === 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}