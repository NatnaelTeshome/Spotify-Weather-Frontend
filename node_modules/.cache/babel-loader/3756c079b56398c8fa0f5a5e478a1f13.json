{"ast":null,"code":"var _jsxFileName = \"/Users/johnboesen/Documents/Code/bootcamp-week1-exercises-1/personal-assistant/src/Containers/Reminders/index.js\";\nimport { SearchBar, AddButton, Reminder, ReminderBox } from \"./styles.js\";\nimport React, { useState } from 'react';\n\nconst Reminders = () => {\n  const initialTodos = [\"Click the plus button below to add a reminder!\", \"Click this reminder to mark it as complete!\", \"mo reminders mo power\"];\n  const [reminders, setReminders] = useState(initialTodos);\n  const [query, setQuery] = useState('');\n\n  const handleComplete = todo => {\n    reminders.forEach(e => console.log(e));\n    console.log(reminders.indexOf(todo));\n    reminders.splice(reminders.indexOf(todo), 1);\n    reminders.forEach(e => console.log(e)); // Why is this not updating?\n\n    setReminders(reminders);\n  };\n\n  const handleSearch = query => {\n    let res = [];\n    reminders.forEach(e => {\n      if (e.toLowerCase().includes(query.toLowerCase())) {\n        res.push(e);\n      }\n    });\n    setReminders(res);\n  };\n\n  const handleAdd = () => {\n    // Why won't this go away???\n    console.log(\"handle add called\"); // const newReminder = prompt('Add your reminder')\n    // reminders.push(newReminder)\n    // setReminders(reminders)\n  };\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    query: query,\n    setQuery: setQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: e => {\n      setQuery(e.target.value);\n      handleSearch(e.target.value);\n    },\n    placeholder: \"Search for a reminder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReminderBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, reminders.map(todo => /*#__PURE__*/React.createElement(Reminder, {\n    onClick: () => handleComplete(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \" \", todo)), /*#__PURE__*/React.createElement(AddButton, {\n    onClick: handleAdd(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Add Reminder\"))));\n};\n\nexport default Reminders;","map":{"version":3,"sources":["/Users/johnboesen/Documents/Code/bootcamp-week1-exercises-1/personal-assistant/src/Containers/Reminders/index.js"],"names":["SearchBar","AddButton","Reminder","ReminderBox","React","useState","Reminders","initialTodos","reminders","setReminders","query","setQuery","handleComplete","todo","forEach","e","console","log","indexOf","splice","handleSearch","res","toLowerCase","includes","push","handleAdd","target","value","display","justifyContent","alignItems","map"],"mappings":"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","sourcesContent":["import { SearchBar, AddButton, Reminder, ReminderBox } from \"./styles.js\"\nimport React, { useState } from 'react'\n\nconst Reminders = () => {\n    const initialTodos = [\"Click the plus button below to add a reminder!\", \"Click this reminder to mark it as complete!\", \"mo reminders mo power\"]\n    const [reminders, setReminders] = useState(initialTodos)\n    const [query, setQuery] = useState('')\n    const handleComplete = (todo) => {\n        reminders.forEach((e) => console.log(e))\n        console.log(reminders.indexOf(todo))\n        reminders.splice(reminders.indexOf(todo), 1)\n        reminders.forEach((e) => console.log(e))\n        // Why is this not updating?\n        setReminders(reminders)\n    };\n    const handleSearch = (query) => {\n        let res = []\n        reminders.forEach(e => {\n            if (e.toLowerCase().includes(query.toLowerCase())) {\n                res.push(e)\n            }\n        })\n        setReminders(res)\n    }\n    const handleAdd = () => {\n        // Why won't this go away???\n        console.log(\"handle add called\")\n        // const newReminder = prompt('Add your reminder')\n        // reminders.push(newReminder)\n        // setReminders(reminders)\n    }\n\n\n    return (\n        <body>\n            <SearchBar query={query} setQuery={setQuery}>\n                <input type=\"text\" value={query} onChange={e => { setQuery(e.target.value); handleSearch(e.target.value) }} placeholder=\"Search for a reminder\" />\n            </SearchBar>\n            {/* I want this div half width and centered??? */}\n            <div style={{\n                display: 'flex', justifyContent: 'center', alignItems: 'center'\n            }}>\n                <ReminderBox>\n                    {/* How do I get this to work??? */}\n                    {reminders.map((todo) => (\n                        <Reminder\n                            onClick={() => handleComplete(todo)}\n                        > {todo}\n                        </Reminder>\n                    ))}\n                    <AddButton onClick={handleAdd()}>Add Reminder</AddButton>\n                </ReminderBox>\n            </div>\n        </body>\n    );\n}\nexport default Reminders\n"]},"metadata":{},"sourceType":"module"}