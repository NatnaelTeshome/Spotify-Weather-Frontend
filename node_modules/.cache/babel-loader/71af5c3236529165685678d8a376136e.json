{"ast":null,"code":"var _jsxFileName = \"/Users/johnboesen/Documents/Code/bootcamp-week1-exercises-1/personal-assistant/src/Containers/Reminders/index.js\";\nimport { SearchBar, AddButton, Reminder, ReminderBox } from \"./styles.js\";\nimport React, { useState } from 'react'; // Where do I get Alert from???\n// import { Alert } from 'react-native';\n\nconst Reminders = () => {\n  const initialTodos = [\"Click the plus button below to add a reminder!\", \"Click this reminder to mark it as complete!\"];\n  const [reminders, setReminders] = useState(initialTodos);\n  const [query, setQuery] = useState('');\n\n  const handleComplete = todo => {\n    console.log(indexOf(todo));\n    reminders.splice(reminders.indexOf(todo), 1);\n    setReminders(reminders);\n  };\n\n  const handleSearch = query => {\n    let res = new Array();\n    reminders.forEach(e => {\n      if (e.toLowerCase().includes(query.toLowerCase())) {\n        res.push(e);\n      }\n    });\n    setReminders(res);\n  };\n\n  const handleAddReq = () => {\n    return; // Alert.prompt(\n    //     \"Enter new reminder\", \"Put your new reminder here...\", [\n    //     {\n    //         text: \"Cancel\",\n    //         onPress: () => console.log(\"Cancel Pressed\"),\n    //         style: \"cancel\"\n    //     },\n    //     {\n    //         text: \"OK\",\n    //         // Is this the right way to call this or nah???\n    //         onPress: newReminder => handleAdd\n    //     }\n    // ],\n    // )\n  };\n\n  const handleAdd = newReminder => {\n    reminders.push(newReminder);\n    setReminders(reminders);\n  };\n\n  return /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    query: query,\n    setQuery: setQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: e => {\n      setQuery(e.target.value);\n      handleSearch(e);\n    },\n    placeholder: \"Search for a reminder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReminderBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Reminder, {\n    onClick: () => handleComplete(\"x\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \" test\"), reminders.map(todo => /*#__PURE__*/React.createElement(Reminder, {\n    onClick: () => handleComplete(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \" \", todo)), /*#__PURE__*/React.createElement(AddButton, {\n    onClick: handleAddReq(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Add Reminder\"))));\n};\n\nexport default Reminders;","map":{"version":3,"sources":["/Users/johnboesen/Documents/Code/bootcamp-week1-exercises-1/personal-assistant/src/Containers/Reminders/index.js"],"names":["SearchBar","AddButton","Reminder","ReminderBox","React","useState","Reminders","initialTodos","reminders","setReminders","query","setQuery","handleComplete","todo","console","log","indexOf","splice","handleSearch","res","Array","forEach","e","toLowerCase","includes","push","handleAddReq","handleAdd","newReminder","target","value","display","justifyContent","alignItems","map"],"mappings":"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","sourcesContent":["import { SearchBar, AddButton, Reminder, ReminderBox } from \"./styles.js\"\nimport React, { useState } from 'react'\n// Where do I get Alert from???\n// import { Alert } from 'react-native';\n\nconst Reminders = () => {\n    const initialTodos = [\"Click the plus button below to add a reminder!\", \"Click this reminder to mark it as complete!\"]\n    const [reminders, setReminders] = useState(initialTodos)\n    const [query, setQuery] = useState('')\n    const handleComplete = (todo) => {\n        console.log(indexOf(todo))\n        reminders.splice(reminders.indexOf(todo), 1)\n        setReminders(reminders)\n    };\n    const handleSearch = (query) => {\n        let res = new Array()\n        reminders.forEach(e => {\n            if (e.toLowerCase().includes(query.toLowerCase())) {\n                res.push(e)\n            }\n        })\n        setReminders(res)\n    }\n\n    const handleAddReq = () => {\n        return\n        // Alert.prompt(\n        //     \"Enter new reminder\", \"Put your new reminder here...\", [\n        //     {\n        //         text: \"Cancel\",\n        //         onPress: () => console.log(\"Cancel Pressed\"),\n        //         style: \"cancel\"\n        //     },\n        //     {\n        //         text: \"OK\",\n        //         // Is this the right way to call this or nah???\n        //         onPress: newReminder => handleAdd\n        //     }\n        // ],\n        // )\n    }\n\n\n    const handleAdd = (newReminder) => {\n        reminders.push(newReminder)\n        setReminders(reminders)\n    }\n\n    return (\n        <body>\n            <SearchBar query={query} setQuery={setQuery}>\n                <input type=\"text\" value={query} onChange={e => { setQuery(e.target.value); handleSearch(e) }} placeholder=\"Search for a reminder\" />\n            </SearchBar>\n            {/* I want this div half width and centered??? */}\n            <div style={{\n                display: 'flex', justifyContent: 'center', alignItems: 'center'\n            }}>\n                <ReminderBox>\n                    <Reminder\n                        onClick={() => handleComplete(\"x\")}\n                    > test</Reminder>\n                    {/* How do I get this to work??? */}\n                    {reminders.map((todo) => (\n                        <Reminder\n                            onClick={() => handleComplete(todo)}\n                        > {todo}\n                        </Reminder>\n                    ))}\n                    <AddButton onClick={handleAddReq()}>Add Reminder</AddButton>\n                </ReminderBox>\n            </div>\n        </body>\n    );\n}\nexport default Reminders\n"]},"metadata":{},"sourceType":"module"}