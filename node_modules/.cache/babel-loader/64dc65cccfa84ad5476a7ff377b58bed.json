{"ast":null,"code":"const id = '4aa2e2d16efe46e198d444f232e96695'; // client id\n\nconst sec = '42147b97f5254fc1b06949d1cc3f0694'; // secret\n\nconst redirect_uri = 'http://localhost:3000'; // feel free to edit\n\nlet access_token = null;\nlet refresh_token = null;\nlet currentPlaylist = \"\";\nlet radioButtons = [];\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\";\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\nexport const onPageLoad = () => {\n  id = localStorage.getItem(\"id\");\n  sec = localStorage.getItem(\"sec\");\n\n  if (window.location.search.length > 0) {\n    handleRedirect();\n  } else {\n    access_token = localStorage.getItem(\"access_token\");\n\n    if (access_token == null) {\n      // we don't have an access token so present token section\n      document.getElementById(\"tokenSection\").style.display = 'block';\n    } else {\n      // we have an access token so present device section\n      document.getElementById(\"deviceSection\").style.display = 'block';\n      refreshDevices();\n      refreshPlaylists();\n      currentlyPlaying();\n    }\n  }\n\n  refreshRadioButtons();\n};\nexport const handleRedirect = () => {\n  let code = getCode();\n  fetchAccessToken(code);\n  window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n};\nexport const getCode = () => {\n  let code = null;\n  const queryString = window.location.search;\n\n  if (queryString.length > 0) {\n    const urlParams = new URLSearchParams(queryString);\n    code = urlParams.get('code');\n  }\n\n  return code;\n};\nexport const requestAuthorization = () => {\n  // TODO: get id's from backend\n  let url = AUTHORIZE;\n  url += \"?id=\" + id;\n  url += \"&response_type=code\";\n  url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  url += \"&show_dialog=true\";\n  url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n  window.location.href = url; // Show Spotify's authorization screen\n};\nexport const fetchAccessToken = code => {\n  let body = \"grant_type=authorization_code\";\n  body += \"&code=\" + code;\n  body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n  body += \"&id=\" + id;\n  body += \"&sec=\" + sec;\n  callAuthorizationApi(body);\n};\nexport const refreshAccessToken = () => {\n  refresh_token = localStorage.getItem(\"refresh_token\");\n  let body = \"grant_type=refresh_token\";\n  body += \"&refresh_token=\" + refresh_token;\n  body += \"&id=\" + id;\n  callAuthorizationApi(body);\n};\nexport const callAuthorizationApi = body => {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", TOKEN, true);\n  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n  xhr.setRequestHeader('Authorization', 'Basic ' + btoa(id + \":\" + sec));\n  xhr.send(body);\n  xhr.onload = handleAuthorizationResponse;\n};\nexport const handleAuthorizationResponse = () => {\n  if (this.status == 200) {\n    // var data = JSON.parse(this.responseText);\n    console.log(data);\n    const data = JSON.parse(this.responseText);\n\n    if (data.access_token != undefined) {\n      access_token = data.access_token;\n      localStorage.setItem(\"access_token\", access_token);\n    }\n\n    if (data.refresh_token != undefined) {\n      refresh_token = data.refresh_token;\n      localStorage.setItem(\"refresh_token\", refresh_token);\n    }\n\n    onPageLoad();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const refreshDevices = () => {\n  callApi(\"GET\", DEVICES, null, handleDevicesResponse);\n};\nexport const handleDevicesResponse = () => {\n  if (this.status == 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"devices\");\n    data.devices.forEach(item => addDevice(item));\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addDevice = item => {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name;\n  document.getElementById(\"devices\").appendChild(node);\n};\nexport const callApi = (method, url, body, callback) => {\n  let xhr = new XMLHttpRequest();\n  xhr.open(method, url, true);\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n  xhr.send(body);\n  xhr.onload = callback;\n};\nexport const refreshPlaylists = () => {\n  callApi(\"GET\", PLAYLISTS, null, handlePlaylistsResponse);\n};\nexport const handlePlaylistsResponse = () => {\n  if (this.status == 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"playlists\");\n    data.items.forEach(item => addPlaylist(item));\n    document.getElementById('playlists').value = currentPlaylist;\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addPlaylist = item => {\n  let node = document.createElement(\"option\");\n  node.value = item.id;\n  node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n  document.getElementById(\"playlists\").appendChild(node);\n};\nexport const removeAllItems = elementId => {\n  let node = document.getElementById(elementId);\n\n  while (node.firstChild) {\n    node.removeChild(node.firstChild);\n  }\n};\nexport const play = () => {\n  let playlist_id = document.getElementById(\"playlists\").value;\n  let trackindex = document.getElementById(\"tracks\").value;\n  let album = document.getElementById(\"album\").value;\n  let body = {};\n\n  if (album.length > 0) {\n    body.context_uri = album;\n  } else {\n    body.context_uri = \"spotify:playlist:\" + playlist_id;\n  }\n\n  body.offset = {};\n  body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n  body.offset.position_ms = 0;\n  callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse);\n};\nexport const shuffle = () => {\n  callApi(\"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse);\n  play();\n};\nexport const pause = () => {\n  callApi(\"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const next = () => {\n  callApi(\"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const previous = () => {\n  callApi(\"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse);\n};\nexport const transfer = () => {\n  let body = {};\n  body.device_ids = [];\n  body.device_ids.push(deviceId());\n  callApi(\"PUT\", PLAYER, JSON.stringify(body), handleApiResponse);\n};\nexport const handleApiResponse = () => {\n  if (this.status == 200) {\n    console.log(this.responseText);\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status == 204) {\n    setTimeout(currentlyPlaying, 2000);\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const deviceId = () => {\n  return document.getElementById(\"devices\").value;\n};\nexport const fetchTracks = () => {\n  let playlist_id = document.getElementById(\"playlists\").value;\n\n  if (playlist_id.length > 0) {\n    url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n    callApi(\"GET\", url, null, handleTracksResponse);\n  }\n};\nexport const handleTracksResponse = () => {\n  if (this.status == 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n    removeAllItems(\"tracks\");\n    data.items.forEach((item, index) => addTrack(item, index));\n  } else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const addTrack = (item, index) => {\n  let node = document.createElement(\"option\");\n  node.value = index;\n  node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n  document.getElementById(\"tracks\").appendChild(node);\n};\nexport const currentlyPlaying = () => {\n  callApi(\"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse);\n};\nexport const handleCurrentlyPlayingResponse = () => {\n  if (this.status == 200) {\n    const data = JSON.parse(this.responseText);\n    console.log(data);\n\n    if (data.item != null) {\n      document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n      document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n      document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n    }\n\n    if (data.device != null) {\n      // select device\n      currentDevice = data.device.id;\n      document.getElementById('devices').value = currentDevice;\n    }\n\n    if (data.context != null) {\n      // select playlist\n      currentPlaylist = data.context.uri;\n      currentPlaylist = currentPlaylist.substring(currentPlaylist.lastIndexOf(\":\") + 1, currentPlaylist.length);\n      document.getElementById('playlists').value = currentPlaylist;\n    }\n  } else if (this.status == 204) {} else if (this.status == 401) {\n    refreshAccessToken();\n  } else {\n    console.log(this.responseText);\n    alert(this.responseText);\n  }\n};\nexport const saveNewRadioButton = () => {\n  let item = {};\n  item.deviceId = deviceId();\n  item.playlistId = document.getElementById(\"playlists\").value;\n  radioButtons.push(item);\n  localStorage.setItem(\"radio_button\", JSON.stringify(radioButtons));\n  refreshRadioButtons();\n};\nexport const refreshRadioButtons = () => {\n  let data = localStorage.getItem(\"radio_button\");\n\n  if (data != null) {\n    radioButtons = JSON.parse(data);\n\n    if (Array.isArray(radioButtons)) {\n      removeAllItems(\"radioButtons\");\n      radioButtons.forEach((item, index) => addRadioButton(item, index));\n    }\n  }\n};\nexport const onRadioButton = (deviceId, playlistId) => {\n  let body = {};\n  body.context_uri = \"spotify:playlist:\" + playlistId;\n  body.offset = {};\n  body.offset.position = 0;\n  body.offset.position_ms = 0;\n  callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId, JSON.stringify(body), handleApiResponse); //callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId, null, handleApiResponse );\n};\nexport const addRadioButton = (item, index) => {\n  let node = document.createElement(\"button\");\n  node.className = \"btn btn-primary m-2\";\n  node.innerText = index;\n\n  node.onclick = function () {\n    onRadioButton(item.deviceId, item.playlistId);\n  };\n\n  document.getElementById(\"radioButtons\").appendChild(node);\n};","map":{"version":3,"sources":["/Users/johnboesen/Documents/Code/Spotify-Weather-Frontend/src/api-functions.js"],"names":["id","sec","redirect_uri","access_token","refresh_token","currentPlaylist","radioButtons","AUTHORIZE","TOKEN","PLAYLISTS","DEVICES","PLAY","PAUSE","NEXT","PREVIOUS","PLAYER","TRACKS","CURRENTLYPLAYING","SHUFFLE","onPageLoad","localStorage","getItem","window","location","search","length","handleRedirect","document","getElementById","style","display","refreshDevices","refreshPlaylists","currentlyPlaying","refreshRadioButtons","code","getCode","fetchAccessToken","history","pushState","queryString","urlParams","URLSearchParams","get","requestAuthorization","url","encodeURI","href","body","callAuthorizationApi","refreshAccessToken","xhr","XMLHttpRequest","open","setRequestHeader","btoa","send","onload","handleAuthorizationResponse","status","console","log","data","JSON","parse","responseText","undefined","setItem","alert","callApi","handleDevicesResponse","removeAllItems","devices","forEach","item","addDevice","node","createElement","value","innerHTML","name","appendChild","method","callback","handlePlaylistsResponse","items","addPlaylist","tracks","total","elementId","firstChild","removeChild","play","playlist_id","trackindex","album","context_uri","offset","position","Number","position_ms","deviceId","stringify","handleApiResponse","shuffle","pause","next","previous","transfer","device_ids","push","setTimeout","fetchTracks","replace","handleTracksResponse","index","addTrack","track","artists","handleCurrentlyPlayingResponse","src","images","device","currentDevice","context","uri","substring","lastIndexOf","saveNewRadioButton","playlistId","Array","isArray","addRadioButton","onRadioButton","className","innerText","onclick"],"mappings":"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","sourcesContent":["const id = '4aa2e2d16efe46e198d444f232e96695'; // client id\nconst sec = '42147b97f5254fc1b06949d1cc3f0694'; // secret\nconst redirect_uri = 'http://localhost:3000'; // feel free to edit\n\nlet access_token = null;\nlet refresh_token = null;\nlet currentPlaylist = \"\";\nlet radioButtons = [];\n\nconst AUTHORIZE = \"https://accounts.spotify.com/authorize\"\nconst TOKEN = \"https://accounts.spotify.com/api/token\";\nconst PLAYLISTS = \"https://api.spotify.com/v1/me/playlists\";\nconst DEVICES = \"https://api.spotify.com/v1/me/player/devices\";\nconst PLAY = \"https://api.spotify.com/v1/me/player/play\";\nconst PAUSE = \"https://api.spotify.com/v1/me/player/pause\";\nconst NEXT = \"https://api.spotify.com/v1/me/player/next\";\nconst PREVIOUS = \"https://api.spotify.com/v1/me/player/previous\";\nconst PLAYER = \"https://api.spotify.com/v1/me/player\";\nconst TRACKS = \"https://api.spotify.com/v1/playlists/{{PlaylistId}}/tracks\";\nconst CURRENTLYPLAYING = \"https://api.spotify.com/v1/me/player/currently-playing\";\nconst SHUFFLE = \"https://api.spotify.com/v1/me/player/shuffle\";\n\nexport const onPageLoad = () => {\n    id = localStorage.getItem(\"id\");\n    sec = localStorage.getItem(\"sec\");\n    if (window.location.search.length > 0) {\n        handleRedirect();\n    }\n    else {\n        access_token = localStorage.getItem(\"access_token\");\n        if (access_token == null) {\n            // we don't have an access token so present token section\n            document.getElementById(\"tokenSection\").style.display = 'block';\n        }\n        else {\n            // we have an access token so present device section\n            document.getElementById(\"deviceSection\").style.display = 'block';\n            refreshDevices();\n            refreshPlaylists();\n            currentlyPlaying();\n        }\n    }\n    refreshRadioButtons();\n}\n\nexport const handleRedirect = () => {\n    let code = getCode();\n    fetchAccessToken(code);\n    window.history.pushState(\"\", \"\", redirect_uri); // remove param from url\n}\n\nexport const getCode = () => {\n    let code = null;\n    const queryString = window.location.search;\n    if (queryString.length > 0) {\n        const urlParams = new URLSearchParams(queryString);\n        code = urlParams.get('code')\n    }\n    return code;\n}\n\nexport const requestAuthorization = () => {\n    // TODO: get id's from backend\n    let url = AUTHORIZE;\n    url += \"?id=\" + id;\n    url += \"&response_type=code\";\n    url += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    url += \"&show_dialog=true\";\n    url += \"&scope=user-read-private user-read-email user-modify-playback-state user-read-playback-position user-library-read streaming user-read-playback-state user-read-recently-played playlist-read-private\";\n    window.location.href = url; // Show Spotify's authorization screen\n}\n\nexport const fetchAccessToken = (code) => {\n    let body = \"grant_type=authorization_code\";\n    body += \"&code=\" + code;\n    body += \"&redirect_uri=\" + encodeURI(redirect_uri);\n    body += \"&id=\" + id;\n    body += \"&sec=\" + sec;\n    callAuthorizationApi(body);\n}\n\nexport const refreshAccessToken = () => {\n    refresh_token = localStorage.getItem(\"refresh_token\");\n    let body = \"grant_type=refresh_token\";\n    body += \"&refresh_token=\" + refresh_token;\n    body += \"&id=\" + id;\n    callAuthorizationApi(body);\n}\n\nexport const callAuthorizationApi = (body) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", TOKEN, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    xhr.setRequestHeader('Authorization', 'Basic ' + btoa(id + \":\" + sec));\n    xhr.send(body);\n    xhr.onload = handleAuthorizationResponse;\n}\n\nexport const handleAuthorizationResponse = () => {\n    if (this.status == 200) {\n        // var data = JSON.parse(this.responseText);\n        console.log(data);\n        const data = JSON.parse(this.responseText);\n        if (data.access_token != undefined) {\n            access_token = data.access_token;\n            localStorage.setItem(\"access_token\", access_token);\n        }\n        if (data.refresh_token != undefined) {\n            refresh_token = data.refresh_token;\n            localStorage.setItem(\"refresh_token\", refresh_token);\n        }\n        onPageLoad();\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const refreshDevices = () => {\n    callApi(\"GET\", DEVICES, null, handleDevicesResponse);\n}\n\nexport const handleDevicesResponse = () => {\n    if (this.status == 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"devices\");\n        data.devices.forEach(item => addDevice(item));\n    }\n    else if (this.status == 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addDevice = (item) => {\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name;\n    document.getElementById(\"devices\").appendChild(node);\n}\n\nexport const callApi = (method, url, body, callback) => {\n    let xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Authorization', 'Bearer ' + access_token);\n    xhr.send(body);\n    xhr.onload = callback;\n}\n\nexport const refreshPlaylists = () => {\n    callApi(\"GET\", PLAYLISTS, null, handlePlaylistsResponse);\n}\n\nexport const handlePlaylistsResponse = () => {\n    if (this.status == 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"playlists\");\n        data.items.forEach(item => addPlaylist(item));\n        document.getElementById('playlists').value = currentPlaylist;\n    }\n    else if (this.status == 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addPlaylist = (item) => {\n    let node = document.createElement(\"option\");\n    node.value = item.id;\n    node.innerHTML = item.name + \" (\" + item.tracks.total + \")\";\n    document.getElementById(\"playlists\").appendChild(node);\n}\n\nexport const removeAllItems = (elementId) => {\n    let node = document.getElementById(elementId);\n    while (node.firstChild) {\n        node.removeChild(node.firstChild);\n    }\n}\n\nexport const play = () => {\n    let playlist_id = document.getElementById(\"playlists\").value;\n    let trackindex = document.getElementById(\"tracks\").value;\n    let album = document.getElementById(\"album\").value;\n    let body = {};\n    if (album.length > 0) {\n        body.context_uri = album;\n    }\n    else {\n        body.context_uri = \"spotify:playlist:\" + playlist_id;\n    }\n    body.offset = {};\n    body.offset.position = trackindex.length > 0 ? Number(trackindex) : 0;\n    body.offset.position_ms = 0;\n    callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId(), JSON.stringify(body), handleApiResponse);\n}\n\nexport const shuffle = () => {\n    callApi(\"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId(), null, handleApiResponse);\n    play();\n}\n\nexport const pause = () => {\n    callApi(\"PUT\", PAUSE + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const next = () => {\n    callApi(\"POST\", NEXT + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const previous = () => {\n    callApi(\"POST\", PREVIOUS + \"?device_id=\" + deviceId(), null, handleApiResponse);\n}\n\nexport const transfer = () => {\n    let body = {};\n    body.device_ids = [];\n    body.device_ids.push(deviceId())\n    callApi(\"PUT\", PLAYER, JSON.stringify(body), handleApiResponse);\n}\n\nexport const handleApiResponse = () => {\n    if (this.status == 200) {\n        console.log(this.responseText);\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if (this.status == 204) {\n        setTimeout(currentlyPlaying, 2000);\n    }\n    else if (this.status == 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const deviceId = () => {\n    return document.getElementById(\"devices\").value;\n}\n\nexport const fetchTracks = () => {\n    let playlist_id = document.getElementById(\"playlists\").value;\n    if (playlist_id.length > 0) {\n        url = TRACKS.replace(\"{{PlaylistId}}\", playlist_id);\n        callApi(\"GET\", url, null, handleTracksResponse);\n    }\n}\n\nexport const handleTracksResponse = () => {\n    if (this.status == 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        removeAllItems(\"tracks\");\n        data.items.forEach((item, index) => addTrack(item, index));\n    }\n    else if (this.status == 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const addTrack = (item, index) => {\n    let node = document.createElement(\"option\");\n    node.value = index;\n    node.innerHTML = item.track.name + \" (\" + item.track.artists[0].name + \")\";\n    document.getElementById(\"tracks\").appendChild(node);\n}\n\nexport const currentlyPlaying = () => {\n    callApi(\"GET\", PLAYER + \"?market=US\", null, handleCurrentlyPlayingResponse);\n}\n\nexport const handleCurrentlyPlayingResponse = () => {\n    if (this.status == 200) {\n        const data = JSON.parse(this.responseText);\n        console.log(data);\n        if (data.item != null) {\n            document.getElementById(\"albumImage\").src = data.item.album.images[0].url;\n            document.getElementById(\"trackTitle\").innerHTML = data.item.name;\n            document.getElementById(\"trackArtist\").innerHTML = data.item.artists[0].name;\n        }\n\n\n        if (data.device != null) {\n            // select device\n            currentDevice = data.device.id;\n            document.getElementById('devices').value = currentDevice;\n        }\n\n        if (data.context != null) {\n            // select playlist\n            currentPlaylist = data.context.uri;\n            currentPlaylist = currentPlaylist.substring(currentPlaylist.lastIndexOf(\":\") + 1, currentPlaylist.length);\n            document.getElementById('playlists').value = currentPlaylist;\n        }\n    }\n    else if (this.status == 204) {\n\n    }\n    else if (this.status == 401) {\n        refreshAccessToken()\n    }\n    else {\n        console.log(this.responseText);\n        alert(this.responseText);\n    }\n}\n\nexport const saveNewRadioButton = () => {\n    let item = {};\n    item.deviceId = deviceId();\n    item.playlistId = document.getElementById(\"playlists\").value;\n    radioButtons.push(item);\n    localStorage.setItem(\"radio_button\", JSON.stringify(radioButtons));\n    refreshRadioButtons();\n}\n\nexport const refreshRadioButtons = () => {\n    let data = localStorage.getItem(\"radio_button\");\n    if (data != null) {\n        radioButtons = JSON.parse(data);\n        if (Array.isArray(radioButtons)) {\n            removeAllItems(\"radioButtons\");\n            radioButtons.forEach((item, index) => addRadioButton(item, index));\n        }\n    }\n}\n\nexport const onRadioButton = (deviceId, playlistId) => {\n    let body = {};\n    body.context_uri = \"spotify:playlist:\" + playlistId;\n    body.offset = {};\n    body.offset.position = 0;\n    body.offset.position_ms = 0;\n    callApi(\"PUT\", PLAY + \"?device_id=\" + deviceId, JSON.stringify(body), handleApiResponse);\n    //callApi( \"PUT\", SHUFFLE + \"?state=true&device_id=\" + deviceId, null, handleApiResponse );\n}\n\nexport const addRadioButton = (item, index) => {\n    let node = document.createElement(\"button\");\n    node.className = \"btn btn-primary m-2\";\n    node.innerText = index;\n    node.onclick = function () { onRadioButton(item.deviceId, item.playlistId) };\n    document.getElementById(\"radioButtons\").appendChild(node);\n}"]},"metadata":{},"sourceType":"module"}